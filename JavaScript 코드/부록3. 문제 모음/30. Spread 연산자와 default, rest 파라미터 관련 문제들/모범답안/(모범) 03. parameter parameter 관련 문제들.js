// Q2. 문자열에도 적용할 수 있는 알파벳순으로 문자열을 정렬해주고 리턴해주는 정렬이라는 함수를 제작해라
//  -> [배열]의 sort()메서드를 사용해라

//  (출력예시) 
//    - 정렬('bear') -> a b e r

//  (해설) 
//    : [배열]에 스프레드 연산자를 사용하면, '요소1 요소2 ...' 이런식으로 펼쳐준다는 특성을 이용
//       -> 반복문으로 '문자열'을 조작해서 출력할 필요 1도 없음
function 정렬(알파벳들){
    return console.log( ...[...알파벳들].sort() );
}

정렬('bear'); 
  
  
// Q3. 알파벳으로 구성된 '문자열'들을 받으면 그 알파벳들의 출현 갯수를 알어주는 함수 글자세기()를 작성하고 실행해라
//  -> set이나 filter와 같은 배열을 통해 다른 배열을 내놓는 [배열]의 메서드를 쓰지 말것
//  -> (힌트) {객체}는 [배열]의 index를 통해 접근하듯, 프로퍼티를 일종의 index처럼 사용하여 [배열]의 문법으로 접근이 가능함

//  (출력예시) 
//    - 글자세기('aacbbb') -> { a : 2, b : 3, c : 1 }

//  (해설) 
//    : {객체}는 [배열]의 index로 접근 가능하다는걸 안다면? 굳이 sort()를 써서 뻘짓할 이유가 없었음
//        -> 애초에 프로퍼티에 값이 없으면, 0, false, '' 등의 초기값으로 자동 초기화 되는데, 그걸 이용하면 현재 index의 문자를 저장할 변수도 필요없음...
function 글자세기(알파벳들){

    var 결과 = {};

    [...알파벳들].forEach(function(a){

        if( 결과[a] > 0 ){

            결과[a]++ 

        }else { 

            결과[a] = 1 
        } 
    }); 

    console.log(결과)
}

글자세기('hdawsxaaaddx'); 

  