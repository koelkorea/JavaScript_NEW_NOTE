- Canvas API
   : 브라우저 화면에 2D 그래픽을 그릴 수 있게 하며(= 2D 렌더링 컨텍스트), 프레임 단위로 동적인 환경에 반응하고 움직일 수 있는 무대를 제공하는 API
       -> 극단적으로는 이걸로 게임도 만들 수 있으며, 기능을 확장해주는 라이브러리들도 많으니... 브라우저로 그래픽을 그리고 싶으면 참고해보기

    # <Canvas> 태그
        : JS를 통해 생성할 수 있는 태그로, 실시간으로 반응하는 

    # 
      1. 화면에 도형을 그릴 수 있어야 함
      2. 화면의 주사율에 맞춰 프레임마다 명령어 입력을 받을 수 있음 + 애니메이션이 동작하여 반응할 수 있으면 OK
      3. 충돌 확인(collsion check)를 할 수 있어야 함


2D 게임의 동작원리

 

구글에 chrome dinosaur game 치면 나오는 2D 플랫폼 게임을 만들어볼건데 

2D 게임이라는게 거창해보이지만 동작방식을 잘 생각해보면 쉽습니다. 

1, 빨간 네모를 여러개 배치해서 사물을 만들고 초록 네모를 배치해서 내 캐릭터를 만듭니다.

2. 그 다음에 방향키를 입력하면 네모가 어떻게 움직일지 코드짜고

3. 네모끼리 충돌하는지 0.1초마다 (아니면 1프레임마다) 계속 체크해서 충돌시 원하는 작업을 해주면

게임개발 끝임 

 

그래서 <div> 이런거 써도 네모 그릴 수 있겠지만 우린 <canvas> 태그를 이용해서 네모를 그려볼것입니다. 

그게 훨씬 그리기 쉬움 



게임을 잘 생각해보면 비슷한 사물이 마구 등장합니다.

우리가 만들 chrome dinosaur game 잘 보면 선인장같은 장애물이 계속 등장합니다.

장애물을 그리고 싶으면 우선 장애물이 어디서 생성될지 / 장애물의 사이즈는 어떻게 되는지 / 어떤 속도로 움직이는지

이런 정보들을 보관해둬야합니다. object 아니면 array 같은 곳에 담아두면 좋지 않을까요?

그래서 비슷한 object 많이 만들 때 뭐 쓰랬죠 

class 쓰면 편하다고 하지 않았습니까 그걸 써봅시다. 